# To build docker image, cd to this directory and run:
#     docker build -t <image_name>:<tag> -f Dockerfile.noetic ../..
# To run the built image, run:
#     docker run --gpus all -it --privileged --network=host \
#         -v ~/<ws_name>/src/:/home/ub20/the_ws/src/:rw \
#         -v /tmp/.X11-unix/:/tmp/.X11-unix:rw \
#         --env="DISPLAY" \
#         --name=<container_name> <image_name>:<tag> bash

FROM nvidia/cuda:11.7.1-devel-ubuntu20.04

MAINTAINER Andy Chien <808790017@gms.tku.edu.tw>

ARG WS_DIR=/home/ub20/the_ws
ARG HOME_DIR=/home/ub20
ARG DEBIAN_FRONTEND=noninteractive

ENV TZ=Asia/Singapore

RUN apt-get update && apt-get install -y \
        apt-utils \
        sudo \
        curl \
        tzdata \
        locales \
        lsb-release

RUN locale-gen en_US en_US.UTF-8 \
    && sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

RUN useradd -ms /bin/bash ub20 && adduser ub20 sudo && passwd -d ub20
USER ub20


RUN sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' \
    && curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - \
    && sudo sh -c 'echo "deb [arch=amd64] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -cs) robotpkg" > /etc/apt/sources.list.d/robotpkg.list' \
    && curl http://robotpkg.openrobots.org/packages/debian/robotpkg.key | sudo apt-key add -

RUN sudo apt-get update && sudo apt-get install -y \
        ros-noetic-ros-base \
        ros-noetic-eigenpy \
        ros-noetic-rqt-multiplot \
        ros-noetic-grid-map-msgs \
        ros-noetic-pybind11-catkin \
        ros-noetic-interactive-markers \
    && sudo apt-get update && sudo apt-get install -y \
        python3-pip \
        python3-rosdep \
        python3-catkin-pkg \
        python3-catkin-tools \
        robotpkg-py38-pinocchio \
    && sudo apt-get update && sudo apt-get install -y \
        vim \
        git \
        wget \
        gnupg \
        gnupg2 \
        rsync \
        doxygen \
        libglpk-dev \
        doxygen-latex \
        libassimp-dev \
        liburdfdom-dev \
        liboctomap-dev

SHELL ["/bin/bash", "--login", "-c"]

COPY ocs2/ocs2_mpcnet/ocs2_mpcnet_core/requirements.txt ${HOME_DIR}
RUN python3 -m pip install --no-cache-dir -r ${HOME_DIR}/requirements.txt \
    && python3 -m pip install --no-cache-dir torchaudio torchvision \
    && sudo rm ${HOME_DIR}/requirements.txt

COPY . ${WS_DIR}/src
RUN sudo chown -R ub20:ub20 ${WS_DIR}/.

WORKDIR /tmp
RUN wget https://github.com/microsoft/onnxruntime/releases/download/v1.7.0/onnxruntime-linux-x64-1.7.0.tgz \
    && tar xf onnxruntime-linux-x64-1.7.0.tgz \
    && mkdir -p ${HOME_DIR}/.local/bin ${HOME_DIR}/.local/include/onnxruntime ${HOME_DIR}/.local/lib ${HOME_DIR}/.local/share/cmake/onnxruntime \
    && rsync -a /tmp/onnxruntime-linux-x64-1.7.0/include/ ${HOME_DIR}/.local/include/onnxruntime \
    && rsync -a /tmp/onnxruntime-linux-x64-1.7.0/lib/ ${HOME_DIR}/.local/lib \
    && rsync -a ${HOME_DIR}/the_ws/src/ocs2/ocs2_mpcnet/ocs2_mpcnet_core/misc/onnxruntime/cmake/ ${HOME_DIR}/.local/share/cmake/onnxruntime

WORKDIR ${WS_DIR}/src/raisimLib
RUN mkdir build \
    && cd build \
    && cmake .. -DRAISIM_EXAMPLE=ON -DRAISIM_PY=ON \
    && sudo make install

WORKDIR ${WS_DIR}
RUN source /opt/ros/noetic/setup.bash \
    && sudo rosdep init \
    && rosdep update \
    && rosdep install --ignore-src --from-paths src -y -r \
    && sudo apt-get remove -y ros-noetic-pinocchio ros-noetic-hpp-fcl \
    && sudo apt-get -y autoremove \
    && sudo apt-get clean

ENV PATH=${HOME_DIR}/.local/bin:/opt/openrobots/bin:$PATH
ENV PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
ENV LD_LIBRARY_PATH=${WS_DIR}/src/raisimLib/raisim/linux/lib:${HOME_DIR}/.local/lib:/usr/local/lib:/opt/openrobots/lib:$LD_LIBRARY_PATH
ENV PYTHONPATH=${WS_DIR}/src/raisimLib/raisim/linux/lib:/opt/openrobots/lib/python3.8/site-packages:$PYTHONPATH
ENV CMAKE_PREFIX_PATH=${HOME_DIR}/.local/share/cmake/onnxruntime:/opt/openrobots:$CMAKE_PREFIX_PATH

RUN source /opt/ros/noetic/setup.bash \
    && catkin init \
    && catkin config --extend /opt/ros/noetic \
    && catkin config -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    && catkin build ocs2 \
    && echo "source /opt/ros/noetic/setup.bash" >> ${HOME_DIR}/.bashrc